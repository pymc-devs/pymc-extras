name: pytest

on:
  pull_request:
  push:
    branches: [main]
    paths:
      - ".github/workflows/*"
      - "pymc_extras/**"
      - "tests/**"
      - "setup.py"
      - "pyproject.toml"
      - "conda-envs/**"
      - "codecov.yml"

jobs:
  ubuntu:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]
        test-subset:
          - tests/model
          - tests/statespace/test_statespace.py
          - tests/statespace/test_kalman_filter.py
          - tests/statespace --ignore tests/statespace/test_statespace.py --ignore tests/statespace/test_kalman_filter.py
          - tests/distributions
          - tests --ignore tests/model --ignore tests/statespace --ignore tests/distributions
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      TEST_SUBSET: ${{ matrix.test-subset }}
      PYTENSOR_FLAGS: gcc__cxxflags='-march=native'
    defaults:
      run:
        shell: bash -leo pipefail {0}
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: conda-envs/environment-test.yml
          miniconda-version: "latest"
          mamba-version: "*"
          activate-environment: pymc-extras-test
          channel-priority: strict
          python-version: ${{matrix.python-version}}
          use-mamba: true
      - name: Install pymc-extras
        run: |
          pip install -e .
          python --version
      - name: Run tests
        run: |
          python -m pytest --color=yes -vv --cov=pymc_extras --cov-append --cov-report=xml --cov-report term --durations=50 $TEST_SUBSET
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          env_vars: TEST_SUBSET
          name: ${{ matrix.os }}
          fail_ci_if_error: false
  windows:
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ["3.12"]
        test-subset:
          - tests/model
          - tests/statespace/test_statespace.py
          - tests/statespace/test_kalman_filter.py
          - tests/statespace --ignore tests/statespace/test_statespace.py --ignore tests/statespace/test_kalman_filter.py
          - tests/distributions
          - tests --ignore tests/model --ignore tests/statespace --ignore tests/distributions
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      TEST_SUBSET: ${{ matrix.test-subset }}
      PYTENSOR_FLAGS: gcc__cxxflags='-march=core2'
    defaults:
      run:
        shell: cmd /C call {0}
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: conda-envs/environment-test.yml
          miniconda-version: "latest"
          mamba-version: "*"
          activate-environment: pymc-extras-test
          channel-priority: strict
          python-version: ${{matrix.python-version}}
          use-mamba: true
      - name: Install pymc-extras
        run: |
          pip install -e .
          python --version
      - name: Run tests
        # This job uses a cmd shell, therefore the environment variable syntax is different!
        # The ">-" in the next line replaces newlines with spaces (see https://stackoverflow.com/a/66809682).
        run: >-
          python -m pytest --color=yes -vv --cov=pymc_extras --cov-append --cov-report=xml --cov-report term --durations=50 %TEST_SUBSET%
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          env_vars: TEST_SUBSET
          name: ${{ matrix.os }}
          fail_ci_if_error: false

  all_tests:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [ ubuntu, windows ]
    steps:
      - name: Check all tests pass
        if: ${{ needs.ubuntu.result != 'success' || needs.windows.result != 'success' }}
        run: exit 1
